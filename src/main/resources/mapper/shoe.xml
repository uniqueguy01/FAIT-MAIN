<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shoe">

	<resultMap type="Shoe" id="shoeMap" autoMapping="true">
		<!-- ID 매핑 -->
		<id column="id" property="id" />

		<!-- 사진 정보 매핑 (collection) -->
		<collection property="shoeImg" ofType="ShoeImg" javaType="ArrayList">
			<id column="shoe_img_id" property="id" />
			<result column="shoe_id" property="shoeId" />
			<result column="filename" property="filename" />
			<result column="uuid" property="uuid" />
		</collection>
	</resultMap>

	<!-- 신발 정보 전부 -->
	<select id="list" resultMap="shoeMap">
		SELECT shoe.id,
			   shoe.store_id,
			   shoe.name,
			   shoe.price,
			   shoe.detail,
			   shoe.category,
	
			   shoe_img.id as shoe_img_id,
			   shoe_img.shoe_id,
			   shoe_img.filename,
			   shoe_img.uuid
		FROM shoe
		LEFT JOIN shoe_img ON shoe.id=shoe_img.shoe_id
	</select>

	<!-- 신발 정보 하나 -->
	<select id="item" resultMap="shoeMap">
		SELECT shoe.id,
			   shoe.store_id,
			   shoe.name,
			   shoe.price,
			   shoe.detail,
			   shoe.category,
	
			   shoe_img.id as shoe_img_id,
			   shoe_img.shoe_id,
			   shoe_img.filename,
			   shoe_img.uuid
		FROM shoe
		LEFT JOIN shoe_img ON shoe.id=shoe_img.shoe_id
		WHERE
		shoe.id=#{id}
	</select>

	<!-- 가게와 관련된 신발 정보 하나 -->
	<select id="storeList" parameterType="Long"
		resultMap="shoeMap">
		SELECT shoe.id,
			   shoe.store_id,
			   shoe.name,
			   shoe.price,
			   shoe.detail,
			   shoe.category,
	
			   shoe_img.id as shoe_img_id,
			   shoe_img.shoe_id,
			   shoe_img.filename,
			   shoe_img.uuid
		FROM shoe
		LEFT JOIN shoe_img ON shoe.id=shoe_img.shoe_id
		WHERE
		shoe.store_id=#{storeId}
	</select>

	<!-- 신발 사진 하나 -->
	<select id="itemShoeImg" resultType="ShoeImg">
		SELECT * FROM shoe_img
		WHERE
		id=#{id}
	</select>
	
	<!-- 카테고리 유무 확인 -->
	<select id="getCategories" resultType="string">
	    SELECT DISTINCT category
	    FROM shoe
	    WHERE store_id=#{storeId}
	</select>

	<!-- 신발 정보 추가 -->
	<insert id="add" parameterType="Shoe">
	    <selectKey keyProperty="id" resultType="long" order="BEFORE">
	        SELECT SHOE_SEQ.NEXTVAL FROM DUAL
	    </selectKey>
	    
	    INSERT INTO shoe (id, store_id, name, price, detail, category)
	    VALUES (#{id}, #{storeId}, #{name}, #{price}, #{detail}, #{category})
	</insert>

	<!-- 신발 사진 추가 -->
	<insert id="addShoeImg">
		INSERT INTO shoe_img(id, shoe_id, filename, uuid)
		VALUES(SHOEIMG_SEQ.nextval, #{shoeId}, #{filename}, #{uuid})
	</insert>

	<!-- 신발 정보 수정 -->
	<update id="update">
		UPDATE shoe
		SET store_id=#{storeId}, name=#{name}, price=#{price}, detail=#{detail}, category=#{category}
		WHERE id=#{id}
	</update>

	<!-- 신발 정보 삭제 -->
	<delete id="delete">
		DELETE FROM shoe
		WHERE id=#{id}
<<<<<<< HEAD
	</delete>

	<!-- 신발 사진 삭제 -->
	<delete id="deleteShoeImg">
		DELETE FROM shoe_img
		WHERE shoe_img.shoe_id=#{id}
	</delete>
	
	<!-- 신발 사진 삭제 -->
	<delete id="deleteItemShoeImg">
		DELETE FROM shoe_img
		WHERE id=#{id}
	</delete>
	
	<!-- 1. shoe_img 삭제 -->
	<delete id="delShoeImgs" parameterType="long">
	    DELETE FROM shoe_img
	    WHERE shoe_id IN (SELECT id FROM shoe WHERE store_id=#{id})
	</delete>
	
	<!-- 2. shoe 삭제 -->
	<delete id="delShoes" parameterType="long">
	    DELETE FROM shoe
	    WHERE store_id=#{id}
	</delete>

    <!-- 장바구니 관련 기능 -->
    <select id="list_keyset" resultType="Shoe">
		SELECT * FROM shoe
		
		<where>
			id IN 
			<foreach collection="keySet" item="key" open="(" close=")" separator=",">
				#{key}
			</foreach>
		</where>
	</select>

</mapper>