<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store">

	<resultMap type="Store" id="storeMap" autoMapping="true">
	    <!-- ID 매핑 -->
	    <id column="id" property="id" />
	
	    <!-- 사진 정보 매핑 (collection) -->
	    <collection property="storeImg" ofType="StoreImg" javaType="ArrayList">
	        <id column="store_img_id" property="id" />
	        <result column="store_id" property="storeId" />
	        <result column="type" property="type" />
	        <result column="filename" property="filename" />
	        <result column="uuid" property="uuid" />
	    </collection>
	    
	    <!-- Maker 리스트 매핑 추가 -->
	    <collection property="maker" ofType="Maker" javaType="ArrayList">
	    	<id column="maker_id" property="id" />
	    	<result column="maker_store_id" property="storeId" />
	        <result column="maker_name" property="name" />
	        <result column="maker_info" property="info" />
	        <result column="maker_filename" property="filename" />
	        <result column="maker_uuid" property="uuid" />
	    </collection>
	</resultMap>

	<!-- 가게 정보 전부 -->
    <select id="list" resultMap="storeMap">
        SELECT store.id,
        	   store.cust_id,
        	   store.ceonum,
        	   store.name,
        	   store.address,
        	   
        	   store_img.id AS store_img_id,
        	   store_img.store_id,
        	   store_img.type,
        	   store_img.filename,
        	   store_img.uuid,
        	   
        	   maker.id AS maker_id,
        	   maker.store_id AS maker_store_id,
	           maker.name AS maker_name,
	           maker.info AS maker_info,
	           maker.filename AS maker_filename,
	           maker.uuid AS maker_uuid
	           
        FROM store
        LEFT JOIN store_img ON store.id=store_img.store_id
        LEFT JOIN maker ON store.id = maker.store_id
    </select>
    
    <!-- 가게 정보 하나 -->
    <select id="item" resultMap="storeMap" parameterType="Long">
    	SELECT store.id,
        	   store.cust_id,
        	   store.ceonum,
        	   store.name,
        	   store.address,
        	   
        	   store_img.id AS store_img_id,
        	   store_img.store_id,
        	   store_img.type,
        	   store_img.filename,
        	   store_img.uuid,
        	   
        	   maker.id AS maker_id,
        	   maker.store_id AS maker_store_id,
	           maker.name AS maker_name,
	           maker.info AS maker_info,
	           maker.filename AS maker_filename,
	           maker.uuid AS maker_uuid
        
        FROM store
        LEFT JOIN store_img ON store.id=store_img.store_id
        LEFT JOIN maker ON store.id = maker.store_id
        WHERE store.id=#{id}
    </select>
    
    <!-- 가게 사진 하나 -->
	<select id="itemStoreImg" resultType="StoreImg">
		SELECT * FROM store_img
		WHERE id=#{id}
	</select>
	
	<!-- custId의 가게 -->
	<select id="getStoreId" resultMap="storeMap">
		SELECT * FROM store
		WHERE cust_id=#{id}
	</select>
	
	<select id="itemMaker" resultType="Maker">
		SELECT * FROM maker
		WHERE id=#{id}
	</select>
    
    <!-- 가게 정보 추가 -->
    <insert id="add" parameterType="Store">
	    <selectKey keyProperty="id" order="BEFORE" resultType="Long">
	        SELECT STORE_SEQ.NEXTVAL FROM dual
	    </selectKey>
	    
	    INSERT INTO store (id, cust_id, ceonum, name, address)
	    VALUES (#{id}, #{custId}, #{ceonum}, #{name}, #{address})
	</insert>
    
    <!-- 가게 사진 추가 -->
    <insert id="addStoreImg" parameterType="StoreImg">
    	<selectKey keyProperty="id" order="BEFORE" resultType="Long">
	        SELECT STOREIMG_SEQ.NEXTVAL FROM dual
	    </selectKey>
		INSERT INTO store_img(id, store_id, type, filename, uuid)
		VALUES (#{id}, #{storeId}, #{type}, #{filename}, #{uuid})
	</insert>
	
	<!-- 작가 정보 추가 -->
	<insert id="addMaker" parameterType="Maker">
		<selectKey keyProperty="id" order="BEFORE" resultType="Long">
	        SELECT MAKER_SEQ.NEXTVAL FROM dual
	    </selectKey>
		INSERT INTO maker (id, store_id, name, info, filename, uuid)
		VALUES (#{id}, #{storeId}, #{name}, #{info}, #{filename}, #{uuid})
	</insert>
    
    <!-- 가게 정보 수정 -->
    <update id="update">
    	UPDATE store
		SET cust_id=#{custId}, ceonum=#{ceonum}, name=#{name}, address=#{address}
		WHERE id=#{id}
    </update>
    
    <update id="updateMaker" parameterType="Maker">
	    UPDATE maker
	    SET name=#{name}, info=#{info}
	    <if test="filename != null">, filename = #{filename}</if>
        <if test="uuid != null">, uuid = #{uuid}</if>
	    WHERE id=#{id}
	</update>
    
    <!-- 가게 정보 삭제 -->
    <delete id="delete">
    	DELETE FROM store
		WHERE id=#{id}
    </delete>
    
    <!-- 가게 사진 삭제 -->
    <delete id="deleteStoreImg">
    	DELETE FROM store_img
    	WHERE store_id=#{id}
    </delete>
    
    <!-- 작가 정보 삭제 -->
    <delete id="deleteMaker">
    	DELETE FROM maker
    	WHERE store_id=#{id}
    </delete>
    
</mapper>